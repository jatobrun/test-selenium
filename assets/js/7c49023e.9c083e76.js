"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[911],{4666:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var n=a(7462),o=a(3366),r=(a(7294),a(3905)),i=["components"],s={sidebar_position:2},l="Structure",u={unversionedId:"structure",id:"structure",title:"Structure",description:"Files",source:"@site/docs/structure.md",sourceDirName:".",slug:"/structure",permalink:"/test-selenium/structure",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/structure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/test-selenium/"}},c=[{value:"Files",id:"files",children:[],level:2},{value:"Thoughts",id:"thoughts",children:[],level:2}],h={toc:c};function p(e){var t=e.components,a=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"structure"},"Structure"),(0,r.kt)("h2",{id:"files"},"Files"),(0,r.kt)("p",null,"This project have 2 folders ",(0,r.kt)("inlineCode",{parentName:"p"},"src and docs"),", in src folder is all the code of the test."),(0,r.kt)("p",null,"In src folder are 1 folder (static folder) and 5 python files (_",(0,r.kt)("em",{parentName:"p"},"init"),".py, elements.py, locators.py, main.py and page.py)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"init.py -> I create this file for create a module"),(0,r.kt)("li",{parentName:"ul"},"elements.py -> In this file was all the code about the elements, getters, setter, base element, and the other elements like the ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://selenium-python.readthedocs.io/page-objects.html"},"documentation")),"."),(0,r.kt)("li",{parentName:"ul"},"locators.py -> in this file I use XPATH for locating all the elements in the html page and a use the same metodology than the elements.py, for more info, follow the ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://selenium-python.readthedocs.io/page-objects.html"},"documentation")),"."),(0,r.kt)("li",{parentName:"ul"},"main.py -> Is more the class file for the bot, in this file maybe in the future can i implement unittest library."),(0,r.kt)("li",{parentName:"ul"},"page.py -> Is more the selenium code, and this file contents all the pages that i used to complete the test."),(0,r.kt)("li",{parentName:"ul"},"run.py -> Is more the CLI for the project and this exceute all the other files.")),(0,r.kt)("h2",{id:"thoughts"},"Thoughts"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"I learn selenium for about 1 day, then i began to start the project."),(0,r.kt)("li",{parentName:"ol"},"I try to use less cantity of for loops this was the real challenge because i can not have a large Big O (for example exponencial o cuadratic) I want to stay in a linear way maybe."),(0,r.kt)("li",{parentName:"ol"},"For the second part I use the first one and create a dicctionary, I love dicctionary with arrays, is a easy way to locate and element with many attributes and with this dicctionary i create the csv too (so 2 taks in a arrow)"),(0,r.kt)("li",{parentName:"ol"},"I want to implement CI pipelines integration with github actions and unittest library integration but for the covid and was a weekend i cant."),(0,r.kt)("li",{parentName:"ol"},"I use POO for most of the code."),(0,r.kt)("li",{parentName:"ol"},"I can use lint tools to increase the redability of my code (Pep8)."),(0,r.kt)("li",{parentName:"ol"},"I can use log tools to debug my code.")))}p.isMDXComponent=!0}}]);